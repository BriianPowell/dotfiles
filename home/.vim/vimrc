set nocompatible
filetype off " required

" set shell to bash for compatibility with fish
if stridx($HOME,"Users") > 0
  set shell=/bin/bash
else
  set shell=/run/current-system/sw/bin/bash
endif

" For packages, versions 8.2 and later will autoload `start` packages
" correctly even in your vimrc.
if v:version < 802
    packadd! dracula
endif

" set the runtime path to include Vundle and initialize
set rtp+=~/.vim/bundle/Vundle.vim
call vundle#begin()
" alternatively, pass a path where Vundle should install plugins
" call vundle#begin('~/some/path/here')
" let Vundle manage Vundle, required
Plugin 'VundleVim/Vundle.vim'
Plugin 'vim-airline/vim-airline'
Plugin 'prettier/vim-prettier'
Plugin 'preservim/nerdtree'
Plugin 'kien/rainbow_parentheses.vim'

call vundle#end()            " required
filetype plugin indent on    " required

" Keymaps
:imap jj <Esc>

" Redo with U instead of Ctrl+R
nnoremap U <C-R>

" Enable mouse
set mouse=a

let mapleader=","
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>

set hidden
set nowrap        " don't wrap lines
set tabstop=2     " a tab is four spaces
set expandtab     " Insert spaces instead of a tab
set backspace=indent,eol,start
                  " allow backspacing over everything in insert mode
set autoindent    " always set autoindenting on
set copyindent    " copy the previous indentation on autoindenting
set number        " always show line numbers
set relativenumber
                  " use relative line numbers to improve movement speed
set shiftwidth=2  " number of spaces to use for autoindenting
set shiftround    " use multiple of shiftwidth when indenting with '<' and '>'
set showmatch     " set show matching parenthesis
set ignorecase    " ignore case when searching
set smartcase     " ignore case if search pattern is all lowercase,
                  "   case-sensitive otherwise
set smarttab      " insert tabs on the start of a line according to
                  "   shiftwidth, not tabstop
set hlsearch      " highlight search terms
set incsearch     " show search matches as you type

set history=1000         " remember more commands and search history
set undolevels=1000      " use many muchos levels of undo
set wildignore=*.swp,*.bak,*.pyc,*.class
set title                " change the terminal's title
set visualbell           " don't beep
set noerrorbells         " don't beep

set nobackup
set noswapfile

set ballooneval

filetype plugin indent on

autocmd filetype python set expandtab

set t_Co=256
syntax on
try
  let g:dracula_colorterm = 0
  let g:airline_theme = 'dracula_pro'
  colorscheme dracula_pro
catch
  " Couldn't load colorscheme
endtry

let g:airline_powerline_fonts = 1
set laststatus=2

let g:netrw_liststyle = 3

" s: indicates script variable
" need to call this to populate `shell_error`
let s:theme = system('defaults read -g AppleInterfaceStyle >/dev/null 2>&1')

" v: indicates vim variable
" if shell_error is set, macOS must have been in light mode
if v:shell_error
    set background= 'light'
else
    set background = 'dark'
endif

augroup ColorSchemeSwitch
  autocmd!
  autocmd VimEnter,ColorScheme * if &background == 'dark' | colorscheme dracula_pro | else | colorscheme alucard | endif
augroup END
